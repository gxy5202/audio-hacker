(function(u,s){typeof exports=="object"&&typeof module<"u"?module.exports=s():typeof define=="function"&&define.amd?define(s):(u=typeof globalThis<"u"?globalThis:u||self,u.audiohacker=s())})(this,function(){"use strict";var U=Object.defineProperty;var A=(u,s,p)=>s in u?U(u,s,{enumerable:!0,configurable:!0,writable:!0,value:p}):u[s]=p;var t=(u,s,p)=>(A(u,typeof s!="symbol"?s+"":s,p),p);class w{constructor(e){t(this,"context");t(this,"input");t(this,"output");t(this,"shiftDownBuffer");t(this,"shiftUpBuffer");t(this,"mod1");t(this,"mod2");t(this,"mod1Gain");t(this,"mod2Gain");t(this,"mod3Gain");t(this,"mod4Gain");t(this,"modGain1");t(this,"modGain2");t(this,"fade1");t(this,"fade2");t(this,"mix1");t(this,"mix2");t(this,"delay1");t(this,"delay2");this.context=e;const f=e.createGain(),l=e.createGain();this.input=f,this.output=l;const o=e.createBufferSource(),n=e.createBufferSource(),d=e.createBufferSource(),c=e.createBufferSource();this.shiftDownBuffer=this.createDelayTimeBuffer(e,.1,.05,!1),this.shiftUpBuffer=this.createDelayTimeBuffer(e,.1,.05,!0),o.buffer=this.shiftDownBuffer,n.buffer=this.shiftDownBuffer,d.buffer=this.shiftUpBuffer,c.buffer=this.shiftUpBuffer,o.loop=!0,n.loop=!0,d.loop=!0,c.loop=!0;const m=e.createGain(),r=e.createGain(),a=e.createGain();a.gain.value=0;const G=e.createGain();G.gain.value=0,o.connect(m),n.connect(r),d.connect(a),c.connect(G);const i=e.createGain(),h=e.createGain(),b=e.createDelay(),D=e.createDelay();m.connect(i),r.connect(h),a.connect(i),G.connect(h),i.connect(b.delayTime),h.connect(D.delayTime);const g=e.createBufferSource(),B=e.createBufferSource(),S=this.createFadeBuffer(e,.1,.05);g.buffer=S,B.buffer=S,g.loop=!0,B.loop=!0;const T=e.createGain(),y=e.createGain();T.gain.value=0,y.gain.value=0,g.connect(T.gain),B.connect(y.gain),f.connect(b),f.connect(D),b.connect(T),D.connect(y),T.connect(l),y.connect(l);const v=e.currentTime+.05,R=v+.1-.05;o.start(v),n.start(R),d.start(v),c.start(R),g.start(v),B.start(R),this.mod1=o,this.mod2=n,this.mod1Gain=m,this.mod2Gain=r,this.mod3Gain=a,this.mod4Gain=G,this.modGain1=i,this.modGain2=h,this.fade1=g,this.fade2=B,this.mix1=T,this.mix2=y,this.delay1=b,this.delay2=D,this.setDelay(.1)}createFadeBuffer(e,f,l){const o=f*e.sampleRate,n=(f-2*l)*e.sampleRate,d=o+n,c=e.createBuffer(1,d,e.sampleRate),m=c.getChannelData(0),r=l*e.sampleRate,a=r,G=o-r;for(let i=0;i<o;++i){let h;i<a?h=Math.sqrt(i/r):i>=G?h=Math.sqrt(1-(i-G)/r):h=1,m[i]=h}for(let i=o;i<d;++i)m[i]=0;return c}createDelayTimeBuffer(e,f,l,o){const n=f*e.sampleRate,d=(f-2*l)*e.sampleRate,c=n+d,m=e.createBuffer(1,c,e.sampleRate),r=m.getChannelData(0);for(let a=0;a<n;++a)o?r[a]=(n-a)/c:r[a]=a/n;for(let a=n;a<c;++a)r[a]=0;return m}setPitchOffset(e){e>0?(this.mod1Gain.gain.value=0,this.mod2Gain.gain.value=0,this.mod3Gain.gain.value=1,this.mod4Gain.gain.value=1):(this.mod1Gain.gain.value=1,this.mod2Gain.gain.value=1,this.mod3Gain.gain.value=0,this.mod4Gain.gain.value=0),this.setDelay(.1*Math.abs(e))}setDelay(e){this.modGain1.gain.setTargetAtTime(.5*e,0,.01),this.modGain2.gain.setTargetAtTime(.5*e,0,.01)}setVolume(e){this.output.gain.value=e}disconnect(){var e,f;(e=this.input)==null||e.disconnect(),(f=this.output)==null||f.disconnect()}}return w});
